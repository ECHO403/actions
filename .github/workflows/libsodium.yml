name: libsodium

on: 
  push:
    tags:
      - libsodium-*

env:
  LIBSODIUM_VERSION: "1.0.19"
  NDK_VERSION: "20.0.5594570"
  ANDROID_HOME: "/tmp/Android/sdk"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
          submodules: true

    - name: install toolchain
      run: |
        apt update && apt install -y make llvm-dev libclang-dev clang pkg-config unzip curl default-jdk build-essential
        export PATH=$ANDROID_HOME/cmdline-tools/bin:$PATH
        cd /tmp/
        curl -OL https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
        unzip commandlinetools-linux-6858069_latest.zip
        mkdir -p $ANDROID_HOME
        mv cmdline-tools $ANDROID_HOME
        yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
        sdkmanager --sdk_root=$ANDROID_HOME "ndk;${NDK_VERSION}" "platforms;android-29"
  
    - name: checkout libsodium
      run: |
        git clone --recursive -b $LIBSODIUM_VERSION https://github.com/jedisct1/libsodium.git
        
    - name: build
      run: |
        bash ./libsodium.sh
    
    - name: zip artifacts
      run: |
        cd /tmp/libsodium
        zip -r libsodium-android.zip .
        cd -
        mv libsodium-$LIBSODIUM_VERSION.0.aar libsodium-$LIBSODIUM_VERSION.aar 
    

    - name: upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: libsodium-${{ env.LIBSODIUM_VERSION }}.zip
        path: libsodium-${{ env.LIBSODIUM_VERSION }}.zip


  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: create upload url file
        run: |
          echo -n "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt

      - name: persist upload url
        uses: actions/upload-artifact@v2
        with:
          name: upload_url.txt
          path: ./upload_url.txt

  publish-release:
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - name: download upload url
        uses: actions/download-artifact@v2
        with:
          name: upload_url.txt

      - name: get upload url
        run: |
          upload_url=`cat upload_url.txt`
          echo "uploadurl=$upload_url" >> $GITHUB_ENV

      - name: download asset
        uses: actions/download-artifact@v2
        with:
          name: libsodium-${{ env.LIBSODIUM_VERSION }}.zip

      - name: upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.uploadurl }}
          asset_path: libsodium-${{ env.LIBSODIUM_VERSION }}.zip
          asset_name: libsodium-${{ env.LIBSODIUM_VERSION }}.zip
          asset_content_type: application/octet-stream